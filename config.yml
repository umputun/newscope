app:
  name: "Newscope"
  version: "2.0.0"
  
server:
  listen: ":8080"
  timeout: "30s"
  page_size: 50              # Articles per page for pagination
  base_url: "http://localhost:8080"  # Base URL for RSS feeds and external links

database:
  dsn: "./var/newscope.db"
  max_open_conns: 10
  max_idle_conns: 5
  conn_max_lifetime: 3600

schedule:
  update_interval: "30m"    # Feed update interval (duration format: 30m, 1h, etc.)
  max_workers: 20
  cleanup_age: "168h"       # Maximum age for low-score articles (default: 1 week)
  cleanup_min_score: 5.0    # Minimum score to keep articles regardless of age
  cleanup_interval: "24h"   # How often to run cleanup (default: daily)
  
  # Retry configuration for database operations (SQLite lock handling)
  # retry_attempts: 5         # Number of retry attempts (default: 5)
  # retry_initial_delay: "100ms"  # Initial retry delay (default: 100ms)
  # retry_max_delay: "5s"     # Maximum retry delay (default: 5s)
  # retry_jitter: 0.3         # Jitter factor 0-1 to avoid thundering herd (default: 0.3)

llm:
  # OpenAI-compatible endpoint (OpenAI, Ollama, etc)
  #endpoint: "http://localhost:11434/v1"  # Ollama example
  endpoint: "https://api.openai.com/v1" # OpenAI example
  
  api_key: "${OPENAI_API_KEY}"   # From environment
  model: "gpt-4.1-nano"          # or "gpt-4o-mini"
  temperature: 0.3               # Lower = more consistent
  max_tokens: 2000               # Increased for summaries
  timeout: "30s"
  
  # Optional: Custom system prompt for classification
  # system_prompt: |
  #   You are a tech news curator. Rate articles from 0-10 based on:
  #   - Relevance to software development and technology
  #   - Innovation and emerging technologies
  #   - Practical applications and tutorials
  #   
  #   Respond with JSON array containing for each article:
  #   {
  #     "guid": "article GUID",
  #     "score": 0-10,
  #     "explanation": "brief reason (max 100 chars)",
  #     "topics": ["topic1", "topic2", "topic3"]
  #   }
  
  classification:
    feedback_examples: 50      # Recent examples to include
    use_json_mode: true        # Use JSON mode for classification
    preference_summary_threshold: 25  # Number of new feedbacks before updating preference summary
    summary_retry_attempts: 3  # Retry if summary contains forbidden phrases
    forbidden_summary_prefixes: [
      "The article discusses", "The article introduces", "The article analyzes", "The article explores",
      "The article examines", "The article explains", "The article details", "The article critiques",
      "The article narrates", "The article describes", "The article highlights", "The article presents",
      "The article covers", "Article discusses", "Article introduces", "Article analyzes", 
      "Article explores", "Article examines", "Article explains", "Article details", "Article critiques",
      "Article narrates", "Article describes", "Article highlights", "Article presents", "Article covers",
      "This article", "This post", "The post", "The piece", "Provides an overview", "Discusses",
      "Introduces", "Analyzes", "Explores", "Examines", "Explains", "Details", "Critiques", "Narrates",
      "Describes", "Highlights", "Presents", "Covers", "It explores", "It discusses", "It examines",
      "It explains", "It describes", "It details"
    ]
    
    # Optional: Custom prompts for preference summary generation
    # prompts:
    #   generate_summary: |
    #     Analyze the user's feedback history and create a preference profile.
    #     Focus on:
    #     - Technical depth preferences (beginner vs advanced)
    #     - Content types (tutorials, news, opinion pieces)
    #     - Specific technologies and domains of interest
    #     - Writing style preferences
    #     Limit to 200-300 words.
    #   
    #   update_summary: |
    #     Refine the existing preference profile based on new feedback.
    #     Maintain previous insights while incorporating new patterns.
    #     Note any shifts in interests or preferences.
    #     Keep within 200-300 words.

extraction:
  enabled: true
  timeout: "30s"
  max_concurrent: 5
  rate_limit: "1s"
  user_agent: "Newscope/2.0"
  min_text_length: 100
  include_images: false
  include_links: false

