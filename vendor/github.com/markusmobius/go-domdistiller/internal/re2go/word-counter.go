// Code generated by re2c 3.1, DO NOT EDIT.
package re2go

// Original pattern: [\x{3040}-\x{A4CF}]
func UseFullWordCounter(input string) bool {
	var cursor, marker int
	input += string(rune(0)) // add terminating null
	limit := len(input) - 1  // limit points at the terminating null
	_ = marker

	for {
		{
			var yych byte
			yych = input[cursor]
			switch yych {
			case 0xE3:
				goto yy3
			case 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9:
				goto yy4
			case 0xEA:
				goto yy5
			default:
				if limit <= cursor {
					goto yy10
				}
				goto yy1
			}
		yy1:
			cursor++
		yy2:
			{
				continue
			}
		yy3:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy6
			default:
				goto yy2
			}
		yy4:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy6
			default:
				goto yy2
			}
		yy5:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92:
				goto yy6
			case 0x93:
				goto yy8
			default:
				goto yy2
			}
		yy6:
			cursor++
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy9
			default:
				goto yy7
			}
		yy7:
			cursor = marker
			goto yy2
		yy8:
			cursor++
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F:
				goto yy9
			default:
				goto yy7
			}
		yy9:
			cursor++
			{
				return true
			}
		yy10:
			{
				return false
			}
		}

	}
}

// Original pattern: [\x{AC00}-\x{D7AF}]
func UseLetterWordCounter(input string) bool {
	var cursor, marker int
	input += string(rune(0)) // add terminating null
	limit := len(input) - 1  // limit points at the terminating null
	_ = marker

	for {
		{
			var yych byte
			yych = input[cursor]
			switch yych {
			case 0xEA:
				goto yy14
			case 0xEB, 0xEC:
				goto yy15
			case 0xED:
				goto yy16
			default:
				if limit <= cursor {
					goto yy21
				}
				goto yy12
			}
		yy12:
			cursor++
		yy13:
			{
				continue
			}
		yy14:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy17
			default:
				goto yy13
			}
		yy15:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy17
			default:
				goto yy13
			}
		yy16:
			cursor++
			marker = cursor
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D:
				goto yy17
			case 0x9E:
				goto yy19
			default:
				goto yy13
			}
		yy17:
			cursor++
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF:
				goto yy20
			default:
				goto yy18
			}
		yy18:
			cursor = marker
			goto yy13
		yy19:
			cursor++
			yych = input[cursor]
			switch yych {
			case 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF:
				goto yy20
			default:
				goto yy18
			}
		yy20:
			cursor++
			{
				return true
			}
		yy21:
			{
				return false
			}
		}

	}
}
