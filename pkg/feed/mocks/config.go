// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"sync"

	"github.com/umputun/newscope/pkg/config"
)

// ConfigProviderMock is a mock implementation of feed.ConfigProvider.
//
//	func TestSomethingThatUsesConfigProvider(t *testing.T) {
//
//		// make and configure a mocked feed.ConfigProvider
//		mockedConfigProvider := &ConfigProviderMock{
//			GetFeedsFunc: func() []config.Feed {
//				panic("mock out the GetFeeds method")
//			},
//		}
//
//		// use mockedConfigProvider in code that requires feed.ConfigProvider
//		// and then make assertions.
//
//	}
type ConfigProviderMock struct {
	// GetFeedsFunc mocks the GetFeeds method.
	GetFeedsFunc func() []config.Feed

	// calls tracks calls to the methods.
	calls struct {
		// GetFeeds holds details about calls to the GetFeeds method.
		GetFeeds []struct {
		}
	}
	lockGetFeeds sync.RWMutex
}

// GetFeeds calls GetFeedsFunc.
func (mock *ConfigProviderMock) GetFeeds() []config.Feed {
	if mock.GetFeedsFunc == nil {
		panic("ConfigProviderMock.GetFeedsFunc: method is nil but ConfigProvider.GetFeeds was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetFeeds.Lock()
	mock.calls.GetFeeds = append(mock.calls.GetFeeds, callInfo)
	mock.lockGetFeeds.Unlock()
	return mock.GetFeedsFunc()
}

// GetFeedsCalls gets all the calls that were made to GetFeeds.
// Check the length with:
//
//	len(mockedConfigProvider.GetFeedsCalls())
func (mock *ConfigProviderMock) GetFeedsCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetFeeds.RLock()
	calls = mock.calls.GetFeeds
	mock.lockGetFeeds.RUnlock()
	return calls
}
